{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\n\nexport const NODE_HEADING = 'heading';\nexport const NODE_CODEBLOCK = 'code_block';\nexport const NODE_PARAGRAPH = 'paragraph';\nexport const NODE_QUOTE = 'blockquote';\nexport const NODE_OL = 'ordered_list';\nexport const NODE_UL = 'bullet_list';\nexport const NODE_LI = 'list_item';\nexport const NODE_HR = 'horizontal_rule';\nexport const NODE_BR = 'hard_break';\nexport const NODE_IMAGE = 'image';\n\nexport const MARK_BOLD = 'bold';\nexport const MARK_ITALIC = 'italic';\nexport const MARK_STRIKE = 'strike';\nexport const MARK_UNDERLINE = 'underline';\nexport const MARK_CODE = 'code';\nexport const MARK_LINK = 'link';\nexport const MARK_STYLED = 'styled';\n\nexport function render(document, options = {}) {\n    if (\n        typeof document === 'object' &&\n        document.type === 'doc' &&\n        Array.isArray(document.content)\n    ) {\n        const {\n            blokResolvers = {},\n            defaultBlokResolver = () => null,\n            nodeResolvers: customNodeResolvers = {},\n            markResolvers: customMarkResolvers = {},\n            textResolver = str => str,\n        } = options;\n\n        const nodeResolvers = {\n            ...defaultNodeResolvers,\n            ...customNodeResolvers,\n        };\n\n        const markResolvers = {\n            ...defaultMarkResolvers,\n            ...customMarkResolvers,\n        };\n\n        let currentKey = 0;\n\n        const addKey = element =>\n            React.isValidElement(element)\n                ? React.cloneElement(element, { key: currentKey++ })\n                : element;\n\n        const renderNodes = nodes => {\n            const elements = nodes\n                ? nodes.map(renderNode).filter(node => node != null)\n                : null;\n            return Array.isArray(elements) && elements.length === 0\n                ? null\n                : elements;\n        };\n\n        const renderNode = node => {\n            if (node.type === 'blok') {\n                const { body } = node.attrs;\n                return body.map(({ component, ...props }) => {\n                    const resolver = blokResolvers[component];\n                    const element = resolver\n                        ? resolver(props)\n                        : defaultBlokResolver(component, props);\n                    return addKey(element);\n                });\n            } else {\n                let childNode;\n                if (node.type === 'text') {\n                    childNode = textResolver(node.text);\n                } else {\n                    const resolver = nodeResolvers[node.type];\n                    childNode = resolver\n                        ? addKey(resolver(renderNodes(node.content), node.attrs))\n                        : null;\n                }\n                const marks = node.marks ?? [];\n                return marks.reduceRight((children, mark) => {\n                    const resolver = markResolvers[mark.type];\n                    return resolver\n                        ? addKey(resolver(children, mark.attrs))\n                        : children;\n                }, childNode);\n            }\n        };\n\n        return renderNodes(document.content);\n    } else if (typeof document === 'string') {\n        const {\n          defaultStringResolver = (str) => str,\n          textResolver = (str) => str,\n        } = options;\n        return defaultStringResolver(textResolver(document));\n    }\n    return null;\n}\n\nconst simpleNodeResolver = element => children =>\n    children != null ? React.createElement(element, null, children) : null;\n\nconst emptyNodeResolver = element => () =>\n    React.createElement(element);\n\nconst headingNodeResolver = (children, props) =>\n    React.createElement(`h${props.level}`, null, children);\n\nconst imageNodeResolver = (children, props) =>\n    React.createElement('img', props, children);\n\nconst codeblockNodeResolver = (children, props) => {\n    const codeProps = { className: props.class };\n    const code = React.createElement('code', codeProps, children);\n    return React.createElement('pre', null, code);\n};\n\nconst simpleMarkResolver = element => children =>\n    React.createElement(element, null, children);\n\nconst linkMarkResolver = (children, { href, target, linktype }) => {\n    const props = {\n        href: linktype === 'email' ? `mailto:${href}` : href,\n        target,\n    };\n    return React.createElement('a', props, children);\n};\n\nconst styledMarkResolver = (children, props) =>\n    React.createElement('span', { className: props.class }, children);\n\nconst defaultNodeResolvers = {\n    [NODE_HEADING]: headingNodeResolver,\n    [NODE_CODEBLOCK]: codeblockNodeResolver,\n    [NODE_IMAGE]: imageNodeResolver,\n    [NODE_PARAGRAPH]: simpleNodeResolver('p'),\n    [NODE_QUOTE]: simpleNodeResolver('blockquote'),\n    [NODE_OL]: simpleNodeResolver('ol'),\n    [NODE_UL]: simpleNodeResolver('ul'),\n    [NODE_LI]: simpleNodeResolver('li'),\n    [NODE_HR]: emptyNodeResolver('hr'),\n    [NODE_BR]: emptyNodeResolver('br'),\n};\n\nconst defaultMarkResolvers = {\n    [MARK_LINK]: linkMarkResolver,\n    [MARK_STYLED]: styledMarkResolver,\n    [MARK_BOLD]: simpleMarkResolver('b'),\n    [MARK_ITALIC]: simpleMarkResolver('i'),\n    [MARK_STRIKE]: simpleMarkResolver('s'),\n    [MARK_UNDERLINE]: simpleMarkResolver('u'),\n    [MARK_CODE]: simpleMarkResolver('code'),\n};\n"],"names":["NODE_HEADING","NODE_CODEBLOCK","NODE_PARAGRAPH","NODE_QUOTE","NODE_OL","NODE_UL","NODE_LI","NODE_HR","NODE_BR","NODE_IMAGE","MARK_BOLD","MARK_ITALIC","MARK_STRIKE","MARK_UNDERLINE","MARK_CODE","MARK_LINK","MARK_STYLED","render","document","options","type","Array","isArray","content","blokResolvers","defaultBlokResolver","nodeResolvers","customNodeResolvers","markResolvers","customMarkResolvers","textResolver","str","defaultNodeResolvers","defaultMarkResolvers","currentKey","addKey","element","React","isValidElement","cloneElement","key","renderNodes","nodes","elements","map","renderNode","filter","node","length","body","attrs","component","props","resolver","childNode","text","marks","reduceRight","children","mark","defaultStringResolver","simpleNodeResolver","createElement","emptyNodeResolver","headingNodeResolver","level","imageNodeResolver","codeblockNodeResolver","codeProps","className","class","code","simpleMarkResolver","linkMarkResolver","href","target","linktype","styledMarkResolver"],"mappings":"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"}